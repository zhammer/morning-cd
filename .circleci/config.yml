version: 2.1

########
# JOBS #
########
jobs:
  test-service:
    executor: python-executor
    steps:
      - checkout
      - install-python-dependencies
      - run:
          name: Run mypy
          command: pipenv run mypy morning_cd/
      - run:
          name: Run flake8
          command: pipenv run flake8 morning_cd/
      - run:
          name: Run pytest
          command: pipenv run pytest --junitxml=test-results/pytest/results.xml
      - store_test_results:
          path: test-results

  test-client:
    executor: js-executor
    steps:
      - checkout
      - install-js-dependencies
      - run:
          name: Run tests
          working_directory: web_client
          environment:
            JEST_JUNIT_OUTPUT: "../test-results/jest/results.xml"
          command: yarn test:ci
      - store_test_results:
          path: test-results

  build-client:
    executor: js-executor
    steps:
      - checkout
      - install-js-dependencies
      - run:
          name: Build js client
          working_directory: web_client
          command: yarn build
      - persist_to_workspace:
          root: web_client
          paths:
            - build

  build-service:
    executor: python-sls-executor
    steps:
      - checkout
      - install-sls-dependencies
      - run:
          name: Build serverless package
          command: sls package -p serverless_build/package
      - persist_to_workspace:
          root: serverless_build
          paths:
            - package

  deploy-client:
    executor: python-sls-executor
    steps:
      - checkout
      - install-sls-dependencies
      - attach_workspace:
          at: web_client
      - run:
          name: Deploy client to s3 bucket
          command: sls client deploy --no-confirm
      - store_artifacts:
          path: web_client/build
          destination: client_build

  deploy-service:
    executor: python-sls-executor
    steps:
      - checkout
      - install-sls-dependencies
      - attach_workspace:
          at: serverless_build
      - run:
          name: Deploy serverless package
          command: sls deploy -p serverless_build/package
      - store_artifacts:
          path: serverless_build/package
          destination: serverless_package

#############
# WORKFLOWS #
#############
workflows:
  version: 2
  build:
    jobs:
      # universal jobs
      - test-service
      - test-client
      - build-client

      # master jobs
      - build-service:
          filters:
            branches:
              only: zh-improve-circle-ci

      - deploy-hold:
          filters:
            branches:
              only: zh-improve-circle-ci
          type: approval
          requires:
            - test-client
            - test-service
            - build-client
            - build-service

      - deploy-service:
          filters:
            branches:
              only: zh-improve-circle-ci
          requires:
            - deploy-hold

      - deploy-client:
          filters:
            branches:
              only: zh-improve-circle-ci
          requires:
            - deploy-hold

#############
# EXECUTORS #
#############
executors:
  python-executor:
    docker:
      - image: circleci/python:3.6.7-stretch
    working_directory: ~/repo
  js-executor:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
  python-sls-executor:
    docker:
      - image: lucascosta/serverless-python3.6
    working_directory: ~/repo

############
# COMMANDS #
############
commands:
  install-python-dependencies:
    description: "Install python dependencies from Pipfile.lock and cache results."
    steps:
      - restore_cache:
          keys:
            - pipenv-cache-{{ checksum "Pipfile.lock" }}
            - pipenv-cache-
      - run:
          name: Install dependencies
          command: pipenv sync --dev
      - save_cache:
          key: pipenv-cache-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local
            - ~/.cache

  install-js-dependencies:
    steps:
      - restore_cache:
          keys:
            - js-cache-{{ checksum "web_client/yarn.lock" }}
            - js-cache-
      - run:
          name: Install dependencies
          working_directory: web_client
          command: yarn install
      - save_cache:
          key: js-cache-{{ checksum "web_client/yarn.lock" }}
          paths: web_client/node_modules

  install-sls-dependencies:
    steps:
      - restore_cache:
          keys:
            - sls-cache-{{ checksum "package.json" }}
            - sls-cache-
      - run:
          name: Install serverless dependencies
          command: yarn install
      - run:
          # this will be redundant once i find a docker image w/ python pipenv and node
          name: Install pipenv
          command: pip install pipenv
      - save_cache:
          key: sls-cache-{{ checksum "package.json" }}
          paths: node_modules
